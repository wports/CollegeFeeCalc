# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'project2.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from pkg_resources import non_empty_lines


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 600)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label_student_firstname = QtWidgets.QLabel(self.centralwidget)
        self.label_student_firstname.setGeometry(QtCore.QRect(230, 40, 171, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_student_firstname.setFont(font)
        self.label_student_firstname.setObjectName("label_student_firstname")
        self.label_student_lastname = QtWidgets.QLabel(self.centralwidget)
        self.label_student_lastname.setGeometry(QtCore.QRect(230, 80, 171, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_student_lastname.setFont(font)
        self.label_student_lastname.setObjectName("label_student_lastname")
        self.label_student_age = QtWidgets.QLabel(self.centralwidget)
        self.label_student_age.setGeometry(QtCore.QRect(230, 120, 171, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_student_age.setFont(font)
        self.label_student_age.setObjectName("label_student_age")
        self.lineEdit_student_firstname = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_student_firstname.setGeometry(QtCore.QRect(420, 50, 141, 31))
        self.lineEdit_student_firstname.setObjectName("lineEdit_student_firstname")
        self.lineEdit_student_lastname = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_student_lastname.setGeometry(QtCore.QRect(420, 90, 141, 31))
        self.lineEdit_student_lastname.setObjectName("lineEdit_student_lastname")
        self.lineEdit_student_age = QtWidgets.QLineEdit(self.centralwidget)
        self.lineEdit_student_age.setGeometry(QtCore.QRect(420, 130, 141, 31))
        self.lineEdit_student_age.setObjectName("lineEdit_student_age")
        self.label_student_info = QtWidgets.QLabel(self.centralwidget)
        self.label_student_info.setGeometry(QtCore.QRect(310, 0, 171, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_student_info.setFont(font)
        self.label_student_info.setObjectName("label_student_info")
        self.label_select_major = QtWidgets.QLabel(self.centralwidget)
        self.label_select_major.setGeometry(QtCore.QRect(320, 180, 171, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.label_select_major.setFont(font)
        self.label_select_major.setObjectName("label_select_major")
        self.comboBox_major = QtWidgets.QComboBox(self.centralwidget)
        self.comboBox_major.setGeometry(QtCore.QRect(270, 230, 231, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.comboBox_major.setFont(font)
        self.comboBox_major.setObjectName("comboBox_major")
        self.comboBox_major.addItem("")
        self.comboBox_major.addItem("")
        self.comboBox_major.addItem("")
        self.comboBox_major.addItem("")
        self.checkBox_instate = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox_instate.setGeometry(QtCore.QRect(330, 320, 101, 21))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.checkBox_instate.setFont(font)
        self.checkBox_instate.setObjectName("checkBox_instate")
        self.pushButton_calculate_fee = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_calculate_fee.setGeometry(QtCore.QRect(290, 360, 171, 61))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.pushButton_calculate_fee.setFont(font)
        self.pushButton_calculate_fee.setObjectName("pushButton_calculate_fee")
# connecting calculate button to def calculate_fee
        self.pushButton_calculate_fee.clicked.connect(self.calculate_fee)

        self.pushButton_clear_form = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_clear_form.setGeometry(QtCore.QRect(30, 410, 121, 41))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.pushButton_clear_form.setFont(font)
        self.pushButton_clear_form.setObjectName("pushButton_clear_form")
#connecting clear button to def clear_form
        self.pushButton_clear_form.clicked.connect(self.clear_form)

        self.pushButton_exit_form = QtWidgets.QPushButton(self.centralwidget)
        self.pushButton_exit_form.setGeometry(QtCore.QRect(30, 470, 121, 41))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.pushButton_exit_form.setFont(font)
        self.pushButton_exit_form.setObjectName("pushButton_exit_form")
#connecting exit button to def exit_form
        self.pushButton_exit_form.clicked.connect(self.exit_form)

        self.tuition_fee_output = QtWidgets.QLabel(self.centralwidget)
        self.tuition_fee_output.setGeometry(QtCore.QRect(330, 430, 221, 81))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(12)
        self.tuition_fee_output.setFont(font)
        self.tuition_fee_output.setText("")
        self.tuition_fee_output.setObjectName("tuition_fee_output")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 26))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label_student_firstname.setText(_translate("MainWindow", "Student First Name"))
        self.label_student_lastname.setText(_translate("MainWindow", "Student Last Name"))
        self.label_student_age.setText(_translate("MainWindow", "Student Age"))
        self.label_student_info.setText(_translate("MainWindow", "Student Information"))
        self.label_select_major.setText(_translate("MainWindow", "Select Major"))
        self.comboBox_major.setItemText(0, _translate("MainWindow", "Computer Science"))
        self.comboBox_major.setItemText(1, _translate("MainWindow", "Sciences"))
        self.comboBox_major.setItemText(2, _translate("MainWindow", "Business Administration"))
        self.comboBox_major.setItemText(3, _translate("MainWindow", "Arts and Humanities"))
        self.checkBox_instate.setText(_translate("MainWindow", "In-State"))
        self.pushButton_calculate_fee.setText(_translate("MainWindow", "Calculate Fee"))
        self.pushButton_clear_form.setText(_translate("MainWindow", "Clear Form"))
        self.pushButton_exit_form.setText(_translate("MainWindow", "Exit Form"))
# Clearing all lines when the clear form button is pushed
    def clear_form(self):
        self.lineEdit_student_firstname.clear()
        self.lineEdit_student_lastname.clear()
        self.lineEdit_student_age.clear()
        self.tuition_fee_output.clear()
# Exiting the application when the exit form button is pressed
    def exit_form(self):
        application.quit()

# creating def calculate_fee to fill when calculate fee button is pushed
    def calculate_fee(self):

        # if there is nothing in the first name line edit, clear it and give an error message
        if len (self.lineEdit_student_firstname.text()) == 0:
            msg = QtWidgets.QMessageBox()
            msg.setText("Please enter your first name")
            msg.exec_()
            self.lineEdit_student_firstname.clear()
            return None

        # if there is nothing in the last name line edit, clear it and give an error message
        if len (self.lineEdit_student_lastname.text()) == 0:
            msg = QtWidgets.QMessageBox()
            msg.setText("Please enter your last name")
            msg.exec_()
            self.lineEdit_student_lastname.clear()
            return None

        # if there is nothing in the age line edit, then give an error and clear it
        if len (self.lineEdit_student_age.text()) == 0:
            msg = QtWidgets.QMessageBox()
            msg.setText("Please enter your age")
            msg.exec_()
            self.lineEdit_student_age.clear()
            return None
# creating the tuition variable
        tuition = 0
# if the checkbox is clicked, then make tuition 10,000 signifying in state, if its not clicked, let it be 15000
        if self.checkBox_instate.isChecked():
            tuition = 10000
        else:
            tuition = 15000
# if combobox says computer science, add 2000 to tuition
        if self.comboBox_major.currentText() == "Computer Science":
            tuition = tuition + 2000

# if combobox says business administration, add 1500 to tuition
        elif self.comboBox_major.currentText() == "Business Administration":
            tuition = tuition + 1500

# if combobox says Arts and humanities, add 1000 to tuition
        elif self.comboBox_major.currentText() == "Arts and Humanities":
            tuition = tuition + 1000

#if combobox says Sciences, add 1800 to tuition
        elif self.comboBox_major.currentText() == "Sciences":
            tuition = tuition + 1800



# display tuition in the suition_fee_output label as a string
        self.tuition_fee_output.setText(str(tuition))



# running the program
if __name__ == '__main__':
    import sys

    application = QtWidgets.QApplication(sys.argv)
    form = QtWidgets.QMainWindow()
    user_interface = Ui_MainWindow()
    user_interface.setupUi(form)
    form.show()
    sys.exit(application.exec())